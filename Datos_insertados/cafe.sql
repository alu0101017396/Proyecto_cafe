-- MySQL Script generated by MySQL Workbench
-- Sun Jan 10 17:04:18 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cafe
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cafe
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cafe` DEFAULT CHARACTER SET utf8 ;
USE `cafe` ;

-- -----------------------------------------------------
-- Table `cafe`.`Tarjeta_de_puntos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Tarjeta_de_puntos` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Tarjeta_de_puntos` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Puntos` INT NOT NULL,
  PRIMARY KEY (`ID`))
;


-- -----------------------------------------------------
-- Table `cafe`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Cliente` (
  `DNI` VARCHAR(9) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Telefono` INT NULL,
  `Direccion` VARCHAR(45) NULL,
  `Fecha_de_nacimiento` DATE NULL,
  `Descuento` DOUBLE NOT NULL,
  `ID_Tarjeta` INT NULL,
  PRIMARY KEY (`DNI`),
  CONSTRAINT `ID_Tarjeta`
    FOREIGN KEY (`ID_Tarjeta`)
    REFERENCES `cafe`.`Tarjeta_de_puntos` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `cafe`.`Plato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Plato` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Plato` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Precio` DOUBLE NOT NULL,
  `Alergenos` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
;


-- -----------------------------------------------------
-- Table `cafe`.`Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Pedido` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Pedido` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(20) NOT NULL,
  `Precio` DOUBLE NOT NULL,
  `Rebajado` DOUBLE NULL,
  `ID_Cliente` VARCHAR(9) NULL,
  `ID_Plato` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `ID_Cliente`
    FOREIGN KEY (`ID_Cliente`)
    REFERENCES `cafe`.`Cliente` (`DNI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ID_Plato`
    FOREIGN KEY (`ID_Plato`)
    REFERENCES `cafe`.`Plato` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


-- -----------------------------------------------------
-- Table `cafe`.`Ingredientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Ingredientes` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Ingredientes` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Alergeno` VARCHAR(45) NULL,
  `Tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
;


-- -----------------------------------------------------
-- Table `cafe`.`Personal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Personal` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Personal` (
  `DNI` VARCHAR(9) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Tarjeta_electronico` INT NOT NULL,
  `Telefono` INT(9) NULL,
  `Fecha_de_nacimiento` DATE NOT NULL,
  `Tipo` VARCHAR(45) NOT NULL,
  `Hora_entrada` TIME NOT NULL,
  `Hora_salida` TIME NOT NULL,
  PRIMARY KEY (`DNI`))
;


-- -----------------------------------------------------
-- Table `cafe`.`Establecimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Establecimiento` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Establecimiento` (
  `Nombre` VARCHAR(30) NOT NULL,
  `Gerente` VARCHAR(45) NOT NULL,
  `Stock` INT NULL,
  `Direccion` VARCHAR(45) NOT NULL,
  `Inventario` INT NULL,
  PRIMARY KEY (`Nombre`))
;


-- -----------------------------------------------------
-- Table `cafe`.`Plato-Ingrediente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Plato_Ingrediente` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Plato_Ingrediente` (
  `ID_Plato` INT NOT NULL,
  `ID_Ingrediente` INT NOT NULL,
  
  CONSTRAINT `ID_Plato_fk`
    FOREIGN KEY (`ID_Plato`)
    REFERENCES `cafe`.`Plato` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ID_Ingrediente`
    FOREIGN KEY (`ID_Ingrediente`)
    REFERENCES `cafe`.`Ingredientes` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table `cafe`.`Establecimiento-Plato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Establecimiento_Plato` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Establecimiento_Plato` (
  `ID_Establecimiento` VARCHAR(30) NOT NULL,
  `ID_Plato` INT NOT NULL,
  CONSTRAINT `ID_Establecimiento`
    FOREIGN KEY (`ID_Establecimiento`)
    REFERENCES `cafe`.`Establecimiento` (`Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ID_Plato_est`
    FOREIGN KEY (`ID_Plato`)
    REFERENCES `cafe`.`Plato` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table `cafe`.`Establecimiento-Personal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Establecimiento_Personal` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Establecimiento_Personal` (
  `Nombre_Establecimiento` VARCHAR(30) NOT NULL,
  `ID_Personal` VARCHAR(9) NOT NULL,
  CONSTRAINT `Nombre_Establecimiento`
    FOREIGN KEY (`Nombre_Establecimiento`)
    REFERENCES `cafe`.`Establecimiento` (`Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ID_Personal`
    FOREIGN KEY (`ID_Personal`)
    REFERENCES `cafe`.`Personal` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table `cafe`.`Reclamaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Reclamaciones` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Reclamaciones` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Comentario_reclamacion` VARCHAR(45) NULL,
  `Nombre_Establecimiento` VARCHAR(30) NOT NULL,
  `ID_Cliente_r` VARCHAR(9) NOT NULL,
  `Encargado` VARCHAR(45) NOT NULL,
  `Comentario` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `ID_Cliente_rec`
    FOREIGN KEY (`ID_Cliente_r`)
    REFERENCES `cafe`.`Cliente` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ID_Establecimiento_rec`
    FOREIGN KEY (`Nombre_Establecimiento`)
    REFERENCES `cafe`.`Establecimiento` (`Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


-- -----------------------------------------------------
-- Table `cafe`.`Opinion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cafe`.`Opinion` ;

CREATE TABLE IF NOT EXISTS `cafe`.`Opinion` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Comentario_opinion` VARCHAR(45) NULL,
  `Nombre_Establecimiento` VARCHAR(30) NOT NULL,
  `ID_Cliente_o` VARCHAR(9) NOT NULL,
  `Valoracion` INT NOT NULL,
  `Comentario` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `ID_Cliente_opinion`
    FOREIGN KEY (`ID_Cliente_o`)
    REFERENCES `cafe`.`Cliente` (`DNI`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ID_Establecimiento_opinion`
    FOREIGN KEY (`Nombre_Establecimiento`)
    REFERENCES `cafe`.`Establecimiento` (`Nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- //// Inserciones Tarjetas

insert into Tarjeta_de_puntos (Puntos) values (100);
insert into Tarjeta_de_puntos (Puntos) values (230);
insert into Tarjeta_de_puntos (Puntos) values (69);
insert into Tarjeta_de_puntos (Puntos) values (720);

-- select * from Tarjeta_de_puntos;
-- /// Inserciones Clientes
-- describe Cliente;
insert into Cliente(DNI,Nombre,Telefono,Direccion,Fecha_de_nacimiento,Descuento,ID_Tarjeta) values ("12345678A","Enrique M Pedroza",684145933,"Calle el suspenso",'1996-12-22',0,1);
insert into Cliente(DNI,Nombre,Telefono,Direccion,Fecha_de_nacimiento,Descuento,ID_Tarjeta) values ("12165678A","Cristian Rodriguez",684176933,"Calle GG ez ",'2000-10-01',0,2);
insert into Cliente(DNI,Nombre,Telefono,Direccion,Fecha_de_nacimiento,Descuento,ID_Tarjeta) values ("12234678A","Francisco uwu",634545933,"Calle lemmon squezy",'1999-05-13',0,3);
insert into Cliente(DNI,Nombre,Telefono,Direccion,Fecha_de_nacimiento,Descuento,ID_Tarjeta) values ("12344678A","Alberto owo",684177933,"Calle git gud",'1980-03-03',0,4);
-- select * from Cliente;
-- //// Inserciones Ingredientes

-- describe Ingredientes;

insert into Ingredientes (Nombre,Alergeno,Tipo) values ("cerveza","Gluten","Bebida");
insert into Ingredientes (Nombre,Alergeno,Tipo) values ("huevo",NULL,"Constructor");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Pan","Gluten","Harinas");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Tomate",NULL,"Verdura");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Queso","Lactosa","Lacteo");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Carne de res",NULL,"Carnes");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Salsa de atun",NULL,"Salsa");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Penne","Gluten","Pasta");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Papa frita","Gluten","Tuberculo");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Expresso",NULL,"Cafe");
insert into Ingredientes (Nombre,Alergeno,Tipo)values ("Manzanilla",NULL,"Te");

-- select * from Ingredientes;

--  Platos

-- describe Plato;

insert into Plato(Nombre,Precio,Alergenos) values ("Cerveza x5",5.0,"Gluten");
insert into Plato(Nombre,Precio,Alergenos) values ("Hamburguesa",4.5,"Lactosa");
insert into Plato(Nombre,Precio,Alergenos) values ("Hamburguesa combo",8,"Gluten,Lactosa");
insert into Plato(Nombre,Precio,Alergenos) values ("Pasta con salsa de atun",6,"Gluten");
-- select * from Plato;


-- describe Plato_Ingrediente;

insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(1,1);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(2,2);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(2,3);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(2,4);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(2,5);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(2,6);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,1);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,2);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,3);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,4);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,5);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,6);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(3,9);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(4,7);
insert into Plato_Ingrediente (ID_Plato,ID_Ingrediente) values(4,8);

-- select * from Plato_Ingrediente;

-- /// Pedido

-- describe Pedido;

insert into Pedido (Tipo,Precio,Rebajado,ID_Cliente,ID_Plato) values ("Local",5.0,5.0,"12345678A",1);
insert into Pedido (Tipo,Precio,Rebajado,ID_Cliente,ID_Plato)values("Local",5,4.5,"12345678A",1);
insert into Pedido (Tipo,Precio,Rebajado,ID_Cliente,ID_Plato)values("Domicilio",8,4,"12234678A",3);
insert into Pedido (Tipo,Precio,Rebajado,ID_Cliente,ID_Plato)values("Domicilio",6,6,"12165678A",4);
insert into Pedido (Tipo,Precio,Rebajado,ID_Cliente,ID_Plato)values("Local",4.5,4,"12344678A",2);

-- select * from Pedido;

-- describe Personal;

insert into Personal (DNI,Nombre,Tarjeta_electronico,Fecha_de_nacimiento,Tipo,Hora_entrada,Hora_salida)values("1111111A","Paco",1,'1999-01-01',"Camarero",'09:00:00','16:00:00');
insert into Personal (DNI,Nombre,Tarjeta_electronico,Fecha_de_nacimiento,Tipo,Hora_entrada,Hora_salida)values("22222222B","Maria",2,'1998-03-22',"Camarero",'16:00:00','21:00:00');
insert into Personal (DNI,Nombre,Tarjeta_electronico,Fecha_de_nacimiento,Tipo,Hora_entrada,Hora_salida)values("33333333C","Vanesa",3,'2000-05-23',"Gerente",'09:00:00','21:00:00');
insert into Personal (DNI,Nombre,Tarjeta_electronico,Fecha_de_nacimiento,Tipo,Hora_entrada,Hora_salida)values("44444444D","Javier",4,'1999-01-01',"Cocinero",'09:00:00','21:00:00');

-- select * from Personal;

-- describe Establecimiento;

insert into Establecimiento (Nombre,Gerente,Direccion)values("C.A.F.E La Laguna","Vanesa","Calle principal");


-- describe Establecimiento_Personal;
insert into Establecimiento_Personal(Nombre_Establecimiento,ID_Personal) values ("C.A.F.E La Laguna","1111111A");
insert into Establecimiento_Personal(Nombre_Establecimiento,ID_Personal) values ("C.A.F.E La Laguna","22222222B");
insert into Establecimiento_Personal(Nombre_Establecimiento,ID_Personal) values ("C.A.F.E La Laguna","33333333C");
insert into Establecimiento_Personal(Nombre_Establecimiento,ID_Personal) values ("C.A.F.E La Laguna","44444444D");


select * from Establecimiento_Personal;











